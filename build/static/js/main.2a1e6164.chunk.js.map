{"version":3,"sources":["components/Navbar.js","components/Diagram.js","components/Form.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","class","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Diagram","className","clasName","src","alt","Form","props","state","name","email","message","isDisabled","handleChange","bind","handleSubmit","subscribe","event","this","setState","target","value","newSubscribee","Axios","post","console","log","e","preventDefault","alert","novalidate","placeholder","required","data-validation-required-message","onChange","rows","onClick","disabled","React","Component","Footer","App","width","height","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a1e6164.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Navbar() {\n  return (\n    <nav\n      class=\"navbar navbar-expand-lg bg-secondary text-uppercase fixed-top\"\n      id=\"mainNav\"\n    >\n      <div class=\"container\">\n        <a class=\"navbar-brand js-scroll-trigger\" href=\"#page-top\">\n          Toto <i class=\"fas fa-paw\"></i> Initiative\n        </a>\n        <button\n          class=\"navbar-toggler navbar-toggler-right text-uppercase font-weight-bold bg-primary text-white rounded\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarResponsive\"\n          aria-controls=\"navbarResponsive\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          Menu\n          <i class=\"fas fa-bars\"></i>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n          <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item mx-0 mx-lg-1\">\n              <a\n                class=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\"\n                href=\"#about\"\n              >\n                About\n              </a>\n            </li>\n            <li class=\"nav-item mx-0 mx-lg-1\">\n              <a\n                class=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\"\n                href=\"#subscribe\"\n              >\n                Contact\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nfunction Diagram() {\n  return (\n    <section className=\"page-section\" id=\"about\">\n      <div className=\"container\">\n        <div clasName=\"row\">\n          <div clasName=\"col-lg-12 text-center\">\n            <h2 class=\"page-section-heading text-center text-uppercase text-secondary mb-0\">\n              About\n            </h2>\n            <div class=\"divider-custom\">\n              <div class=\"divider-custom-line\"></div>\n              <div class=\"divider-custom-icon\">\n                <i class=\"fas fa-paw\"></i>\n              </div>\n              <div class=\"divider-custom-line\"></div>\n            </div>\n          </div>\n        </div>\n        <br />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className=\"text-left lead mb-0 ti-text-about\">\n              Like you, we love pets and care about their welfare. That’s why we\n              created Toto Initiative - a free platform for foster parents to\n              post pets available for adoption, and communicate with aspiring\n              adoptive parents.\n              <br />\n              <br />\n              You already devote a lot your time and resources to make a\n              difference - you shouldn’t have to pay for resources that can help\n              you place your foster babies in their forever homes. Contact us\n              today to get started with your own Toto Initiative site.\n            </div>\n            <br />\n            <h3 class=\"text-left text-uppercase text-secondary mb-0\">\n              Let us help you help them!\n            </h3>\n          </div>\n          <div className=\"col-md-6\">\n            <img\n              className=\"img-fluid\"\n              src=\"img/about/doggyselfie.jpeg\"\n              alt=\"doggyselfie\"\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Diagram;\n","import React from \"react\";\nimport Axios from \"axios\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n      isDisabled: true\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n      isDisabled: !(this.state.name && this.state.email && this.state.message)\n    });\n  }\n\n  async subscribe(newSubscribee) {\n    try {\n      await Axios.post(\n        \"https://xnxm2hxmwa.execute-api.us-east-1.amazonaws.com/v1/subscribe\",\n        newSubscribee\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n\n    await this.subscribe({\n      name: this.state.name,\n      email: this.state.email,\n      message: this.state.message\n    });\n    alert(`Thank you for caring ${this.state.name}!`);\n  }\n\n  render() {\n    return (\n      <section class=\"page-section\" id=\"subscribe\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-lg-12 text-center\">\n              <br />\n              <h2 class=\"page-section-heading text-center text-uppercase text-secondary mb-0\">\n                Get in touch\n              </h2>\n              <div class=\"divider-custom\">\n                <div class=\"divider-custom-line\"></div>\n                <div class=\"divider-custom-icon\">\n                  <i class=\"fas fa-paw\"></i>\n                </div>\n                <div class=\"divider-custom-line\"></div>\n              </div>\n\n              <h4 class=\"section-subheading text-muted\">\n                Let's get you started with Toto!\n              </h4>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-lg-8 mx-auto\">\n              <form name=\"sentMessage\" id=\"contactForm\" novalidate=\"novalidate\">\n                <div class=\"control-group\">\n                  <div class=\"form-group floating-label-form-group controls mb-0 pb-2\">\n                    <label>Name</label>\n                    <input\n                      class=\"form-control\"\n                      name=\"name\"\n                      id=\"name\"\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      required=\"required\"\n                      data-validation-required-message=\"Please enter your name.\"\n                      value={this.state.name}\n                      onChange={this.handleChange}\n                    />\n                    <p class=\"help-block text-danger\"></p>\n                  </div>\n                </div>\n                <div class=\"control-group\">\n                  <div class=\"form-group floating-label-form-group controls mb-0 pb-2\">\n                    <label>Email Address</label>\n                    <input\n                      class=\"form-control\"\n                      name=\"email\"\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"Email Address\"\n                      required=\"required\"\n                      data-validation-required-message=\"Please enter your email address.\"\n                      value={this.state.email}\n                      onChange={this.handleChange}\n                    />\n                    <p class=\"help-block text-danger\"></p>\n                  </div>\n                </div>\n                <div class=\"control-group\">\n                  <div class=\"form-group floating-label-form-group controls mb-0 pb-2\">\n                    <label>Message</label>\n                    <textarea\n                      class=\"form-control\"\n                      name=\"message\"\n                      id=\"message\"\n                      rows=\"3\"\n                      placeholder=\"Message\"\n                      required=\"required\"\n                      data-validation-required-message=\"Please enter a message.\"\n                      onChange={this.handleChange}\n                    >\n                      {this.state.message}\n                    </textarea>\n                    <p class=\"help-block text-danger\"></p>\n                  </div>\n                </div>\n                <br />\n                <div id=\"success\"></div>\n                <div class=\"form-group\">\n                  <button\n                    onClick={this.handleSubmit}\n                    class=\"btn btn-primary btn-xl\"\n                    id=\"sendMessageButton\"\n                    disabled={this.state.isDisabled}\n                  >\n                    Send\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\n\nfunction Footer() {\n return (\n  <section class=\"copyright py-4 text-center text-white\">\n    <div class=\"container\">\n      Toto Initiative &copy; 2020\n      <br />\n      Made with <i class=\"fas fa-paw\"></i> in NYC.\n    </div>\n  </section>\n )\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar.js';\nimport Diagram from './components/Diagram.js';\nimport Form from './components/Form.js';\nimport Footer from './components/Footer.js';\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <header className=\"masthead bg-primary text-black text-center ti-header\">\n        <div className=\"jumbotron jumbotron-fluid ti-header\">\n          <h1 className=\"display-4\">YOU ALREADY DO ENOUGH.</h1>\n          <h2 className=\"lead\">Let us help you help them.</h2>\n          <img className=\"img-fluid\" width=\"1100\" height=\"400\" src=\"img/about/petslookingoveranedge.jpeg\" alt=\"\"/>\n        </div>\n      </header>\n      <Diagram />\n      <Form />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}